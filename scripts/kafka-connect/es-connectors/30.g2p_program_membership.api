# these following will be taken from env
#DB_USER=
#DB_PORT=
#DB_HOSTNAME=
#DB_PASS=
#DB_PREFIX_INDEX=
#ES_URL=

ES_CONN_URL='es-connect:8083'; # needn't change .. this is the ES-connector service name

CONN_NAME="g2p_program_membership_$DB_PREFIX_INDEX"; # change this.. give unique name for each db/table
ES_INDICES="$DB_PREFIX_INDEX.public.g2p_program_membership"

curl \
  -X POST \
  http://$ES_CONN_URL/connectors \
  -H 'Content-Type: application/json' \
  -d \
  '{
      "name": '\"$CONN_NAME\"',
      "config": {
          "connector.class": "io.confluent.connect.elasticsearch.ElasticsearchSinkConnector",
          "name": '\"$CONN_NAME\"',
          "connection.url": '\"$ES_URL\"',
          "tasks.max": "1",
          "topics": '\"$ES_INDICES\"',
          "key.ignore": "false",
          "schema.ignore": "true",
          "key.converter": "org.apache.kafka.connect.json.JsonConverter",
          "value.converter": "org.apache.kafka.connect.json.JsonConverter",
          "key.converter.schemas.enable": "true",
          "value.converter.schemas.enable": "true",

          "behavior.on.null.values": "DELETE",

          "transforms": "keyExtId,debezExtract,tsconvert01,tsconvert02,tsconvert03,tsconvert04,join01,join02,tsSelect",

          "transforms.keyExtId.type": "org.apache.kafka.connect.transforms.ExtractField$Key",
          "transforms.keyExtId.field": "id",

          "transforms.debezExtract.type": "io.debezium.transforms.ExtractNewRecordState",
          "transforms.debezExtract.delete.handling.mode": "drop",
          "transforms.debezExtract.drop.tombstones": "false",
          "transforms.debezExtract.add.fields": "source.ts_ms:ts_ms,table,lsn",
          "transforms.debezExtract.add.fields.prefix": "source_",

          "transforms.tsconvert01.type": "io.mosip.kafka.connect.transforms.TimestampConverterAdv$Value",
          "transforms.tsconvert01.field": "source_ts_ms",

          "transforms.tsconvert02.type": "io.mosip.kafka.connect.transforms.TimestampConverterAdv$Value",
          "transforms.tsconvert02.field": "create_date",
          "transforms.tsconvert02.input.type": "micro_sec",

          "transforms.tsconvert03.type": "io.mosip.kafka.connect.transforms.TimestampConverterAdv$Value",
          "transforms.tsconvert03.field": "write_date",
          "transforms.tsconvert03.input.type": "micro_sec",

          "transforms.tsconvert04.type": "io.mosip.kafka.connect.transforms.TimestampConverterAdv$Value",
          "transforms.tsconvert04.field": "enrollment_date",
          "transforms.tsconvert04.input.type": "days_epoch",
          "transforms.tsconvert04.output.format": "yyyy-MM-dd",

          "transforms.join01.type": "io.mosip.kafka.connect.transforms.DynamicNewField$Value",
          "transforms.join01.es.index": '\"$DB_PREFIX_INDEX.public.res_partner\"',
          "transforms.join01.es.url": '\"$ES_URL\"',
          "transforms.join01.input.fields": "partner_id",
          "transforms.join01.input.default.values": "null",
          "transforms.join01.es.input.fields": "id",
          "transforms.join01.es.output.field": "gender",
          "transforms.join01.output.field": "gender",

          "transforms.join02.type": "io.mosip.kafka.connect.transforms.DynamicNewField$Value",
          "transforms.join02.es.index": '\"$DB_PREFIX_INDEX.public.g2p_program\"',
          "transforms.join02.es.url": '\"$ES_URL\"',
          "transforms.join02.input.fields": "program_id",
          "transforms.join02.input.default.values": "null",
          "transforms.join02.es.input.fields": "id",
          "transforms.join02.es.output.field": "name",
          "transforms.join02.output.field": "program_name",

          "transforms.tsSelect.type": "io.mosip.kafka.connect.transforms.TimestampSelector$Value",
          "transforms.tsSelect.ts.order": "write_date,create_date",
          "transforms.tsSelect.output.field": "@timestamp_gen"
      }
}';
