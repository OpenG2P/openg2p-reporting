{
    "name": "res_partner_dedupe_${DB_PREFIX_INDEX}",
    "config": {
        "connector.class": "io.aiven.kafka.connect.opensearch.OpensearchSinkConnector",
        "connection.url": "${DEDUPE_OPENSEARCH_URL}",
        "connection.username": "${DEDUPE_OPENSEARCH_USERNAME}",
        "connection.password": "${DEDUPE_OPENSEARCH_PASSWORD}",
        "tasks.max": "1",
        "topics": "${DB_PREFIX_INDEX}.public.res_partner",
        "key.ignore": "false",
        "schema.ignore": "true",
        "key.converter": "org.apache.kafka.connect.json.JsonConverter",
        "value.converter": "org.apache.kafka.connect.json.JsonConverter",
        "key.converter.schemas.enable": "true",
        "value.converter.schemas.enable": "false",

        "behavior.on.null.values": "delete",
        "behavior.on.malformed.documents": "warn",
        "behavior.on.version.conflict": "warn",

        "transforms": "triggerDedupe,keyExtId,valExt,renameTopic",

        "transforms.triggerDedupe.type": "org.openg2p.reporting.kafka.connect.transforms.TriggerDeduplication${dollar}Value",
        "transforms.triggerDedupe.deduplication.base.url": "${DEDUPE_SERVICE_BASE_URL}",

        "transforms.keyExtId.type": "org.apache.kafka.connect.transforms.ExtractField${dollar}Key",
        "transforms.keyExtId.field": "id",

        "transforms.valExt.type": "org.openg2p.reporting.kafka.connect.transforms.ApplyJq${dollar}Value",
        "transforms.valExt.field": ".payload.after + {source_ts_ms: .payload.source.ts_ms}",

        "transforms.renameTopic.type": "org.openg2p.reporting.kafka.connect.transforms.RenameTopic",
        "transforms.renameTopic.topic": "res_partner"
    }
}
